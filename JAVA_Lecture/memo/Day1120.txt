<다형성>
부모클래스명 참조변수 = new 자식클래스 ();

작은 타입이 큰 타입으로 들어갈 때는 형변환이 필요 없다. 
부모클래스명으로 참조변수를 넣으면 자식클래스의 접근이 불가하다
그러므로 두가지 방법으로 접근
1) override.
	=> 자식클래스에서 override 하면 부모클래스의 참조변수로
	접근해도 자식의 override된 메소드에 접근이 가능하다.
	ex) toString 이 가장 이해하기 좋은 예시다.
	override 하지 않은 원래의 메소드를 호출하고 싶으면
	super.메소드() 하면 부모꺼도 쓸 수 있다.

2) 부모한테는 없고 자식만 갖고 있는 메소드에 접근 하고 싶은 경우
	=> 부모클래스의 참조변수를 downcasting 한다.
	방법>
	1.Parent p = new Child (); //우선 선언
	2.Child cp = (Child) p; // 다운캐스팅
	3.cp.자식만갖고있는메소드(); // 이렇게 접근

다형성을 사용하면, 참조 변수를 부모타입으로 준다.
이렇게 하면 부모꺼에만 접근가능하지만,
override된 메소드는 자식꺼로 접근이된다.
하지만, 이상태로는 자식에서만 생성된 자식만의 메소드는 접근불가하다.
그러므로 자식클래스의 객체를 만들고, 부모의 객체를 다운캐스팅한다.

super는 main이나 비지니스로직에서 사용하는게 아니다.
this도 마찬가지다. 상속간의 관계에서만 super와 this를 사용할 수 있다.
기준이 중요하다. 사용되는 클래스의 부모, 자식으로 들어가는 것이다.

	