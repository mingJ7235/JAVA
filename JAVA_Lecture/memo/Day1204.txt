1장. 프로세스와 스레드

프로세스 -> 실행중인 하나의 프로그램을 말한다.
	하나의 프로그램은 다중 프로세스를 만들기도한다.
	※하나의 프로그램이 하나의 프로세스만을 가지지않는다.
	독립적인 여러가지의 프로세스를 가진다.
	몇번을 실행했느냐에 따라서 여러개의 프로세스가 생성됨

멀티태스킹 -> 두가지 이상의 작업을 동시에 처리하는 것
	(음악들으면서 문서작업을 한다던지 등)
	한시점에 여러가지 작업을 동시에 처리

	1) 프로세스를 여러가지 실행하는 방법
	-> 독립적으로 여러가지 프로그램을 실행
	2) 멀티스레드를 사용하는 방법
	-> 한개의 프로세스 내부에서 여러가지 작업을 실행하는것
	-> 카톡 프로세스내에서 채팅, 파일전송 이 함께 멀티로 되는것

1-1절 프로세스와 스레드

메인 스레드
-> 모든 자바프로그램은 메인 스레드가 main()을 실행하면서 시작함
	=> main 스레드는 JVM에의해서 생성됨
※스레드는 코드의 실행 흐름이다. 라고 생각하면 된다. 
-> 메인스레드는 작업스레드들을 만든다.
	=> 즉, 메인은 JVM이 만들고, 다른 작업스레드는 메인스레드가 만든다.
		=> 병렬로 코드를 실행할 수 있다.
-> 프로세스 내부에 있는 모든 스레드가 종료가 되어야 프로세스가 종료된다
	=> 즉, 메인이 먼저 종료되도 작업이 종료되어야
		프로세스가 종료된다.

-> 프로세스의 종료
	ㅁ 싱글 스레드 : 메인 스레드가 종료하면 프로세스도 종료된다.
	ㅁ 멀티 스레드 : 실행중인 스레드가 하나라도 있다면
			프로세스는 종료되지 않는다.
	※ 메인 스레드가 작업스레드보다 먼저 종료되도 작업스레드가
	계속 실행중이라면 프로세스는 종료되지 않는다.


1-2절 작업 스레드 생성과 실행

먼저 몇개의 작업을 실행할지 디자인 해야한다.

※메인스레드를 제외하고 동시에 작업할 작업을 결정해야한다.

작업스레드 생성방법
1) Thread 클래스로 부터 직접 생성
2) Thread 하위 클래스로부터 생성


1) Thread 클래스로부터 직접 생성
	작업 스레드를 만들기위해 Runnable 을 implements 받는다.
	run()을 반드시 재정의해야한다. 
	run()안에 스레드가 실행할 코드를 적는다. 

	how1) 정석적임
	작업을한 클래스를 객체화하고, Runnable 타입으로 받는다.
	Thread 타입으로 객체를 만든 다음에 매개에 작업클래스 객체를 넣는다.

	how2) 익명클래스
	Thread 타입의 객체에 Runnable 인터페이스 객체를
	구현객체를 하면서 익명 클래스를 만든다.
	
	how3)람다식
	Runnable 이라는 인터페이스는 run()메소드만 있으므로
	람다식 표현이 가능함

	만든 후, thread.start() 로 실행함
	run()이 아니라! start()로 실행하는것임
	start()로 실행하면 run() 이 실행된다.


2) Thread 하위 클래스로부터 생성
	-> 직접 만들때는 Thread 생성자의 매개체가 필요했으나
	하위클래스로 만들면, thread 객체를 생성하여 사용가능
	

작업 스레드 생성과 실행
	메인 스레드 이름 : main	
	작업 스레드 이름 : Thread-n (번호가 매겨짐
	※ thread.getName(); 하면 그 스레드 이름이 호출됨

스레드 이름을 사용하는 단계 : 디버깅할때, 스레드이름 확인할때

1-3절 스레드 우선순위

동시성 : 멀티작업을 위해 하나의 코어에서 멀티 스레드가 번갈아가며 실행
	-> 한 코어에서 2개이상의 멀티스레드가 실행
	-> 하나의 코어에서는 원칙상 하나의 스레드만 실행함
	그렇기때문에, 하나씩 매우 빠른시간을 통해 번갈아가면서
	스레드들을 실행하는 형태다.
	한번에 하나의 스레드를 실행 !!
	Concurrency

병렬성 : 멀티작업을 위해 멀티 코어에서 개별 스레드를 동시에 실행
	-> 한 코어는 1개의 스레드만을 실행하므로
	각각의 코어에서 하나의 스레드를 여러개의 코어로 사용
	=> 이것이 가장 바람직한 멀티 작업이다.
	서로의 스레드가 실행에 방해를 받지 않고 실행함.
	Parallelism
	
※동시성은 하나의 코어가 하나의 스레드를 실행하는 중에는
	다른 스레드는 대기상태다. 
	옛날 cpu들은 싱글 코어라서 이렇게 동시성으로
	스레드들이 번갈아가면서 실행되었다.
	(번갈아 실행하는 시간타임이 상당히 빠르다.
	그렇기에, 사람눈으로는 식별이안되서
	동시에 작업이 실행되는것처럼 인식된다.)

스레드 스케쥴링
	- 스레드의 개수가 코어의 수보다 많을 경우
	(하나의 코어에 여러가지 스레드가 있을경우)
	
	- 스레드를 어떤순서로 동시성으로 실행할 것인가 결정
	=> 이것이 스레드 스케쥴링
	- 모든 스레드들은 생성하면 실행 대기 상태다.
	- 스케쥴링을 통해 스레드를 선택하여 실행
	- 스케률링에 의해 스레드들은 번갈아가면서
	run()메소드를 조금씩 실행한다. 


- 우선순위 (Prioirity) 방식
	=> 코드로 제어가능
	=> 우선순위가 높은 스레드가 실행상태를 더 많이 
	가지도록 스케쥴링 하는 바식
	=> 순위에 대한 숫자를 주어서 제어함 

- 순환 할당 (Round-Robin) 방식
	=> 코드로 제어 불가
	=> 시간할당량 (Time Slice)를 정해서 
	하나의 스레드를 정해진 시간만큼 실행하는 방식








