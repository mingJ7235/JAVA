try {
//error
}catch (예외명 e) {
	//예외가 발생했을 때 수행하는 코드
}finally {
	//예외가 상관없이 반드시 수행되는 코드
}

메소드
void main (String [] args){
try {
	method1();
}catch () {}
}
void method1 () 예외명{
	a();
}

void a () 예외명{
	b();
}

void b() throws 예외명 {
	예외발생
}
===================
사용자 정의 예외 만들기 (일반 예외가 아니라 프로그램임)

1. 1단계 - 자손클래스 extends Exception 
(Exception을 상속 받는다)
	=> 사용자 정의 예외클래스를 만든다.

2. 2단계 - 비즈니스 로직 클래스 부분에서 예외상황이 되면 조건문으로
	예외 발생 시키기
	throw new 클래스명(사용자 정의 예외클래스)


=========================
java api package는 모두 import해서 써야함
그 중 유일하게 import안해도 되는 것이 java.lang 패키지임

Object클래스

======================
hashCode ()

-동등 객체 비교 원리
1단계. hashCode() 리턴값이 같은지
2단계. equals() 리턴값이 같은지
3단계 둘다 같으면 동등객체, 하나라도 다르면 다른객체.
hashCode부터 비교한다!

=======================
clone() -객체복제
객체를 복제하는 이유는 원본 객체를 안전하게 보호하기 위해서다.

얕은 복제 -> 단순히 필드값을 복사해서 객체를 복제함
	> 필드값만 복제하기때문에 기본타입일경우 값 복사가 일어남

깊은 복제 -> 다같이 복사가 되어서 오리지날도 바뀌게 된다.

clone()은 객체를 복제하려면 Cloneable인터페이스를 구현해야한다.
복제하려면 클래스에 implements Cloneable해야함

CloneNoSupportedException : Cloneable 인터페이스를 구현하지 않고 
			clone()을 호출해서 그렇다. 

즉, Cloneable 인터페이스가 구현된 클래스에서만 clone()을 서야한다.






